{"ast":null,"code":"var _jsxFileName = \"/Users/bb/Dev/visual_stock_v2/react_app/src/Components/Tab.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { ScrollableTabsButtonAuto } from './Tab';\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\nlet isConnected = false;\nlet socket = null;\n\nclass Widget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_list: null\n    };\n  }\n\n  setup_websocket() {\n    return new Promise((resolve, reject) => {\n      let channel = new WebSocket(url);\n\n      channel.onopen = () => {\n        isConnected = true;\n        resolve(channel);\n      };\n\n      channel.onmessage = e => {\n        console.log(e.data);\n        this.setState({\n          data_list: e.data\n        });\n      };\n\n      channel.onerror = e => {\n        reject(e);\n      };\n    });\n  }\n\n  close_websocket(channel) {\n    return new Promise((resolve, reject) => {\n      channel.close();\n\n      channel.onclose = () => {\n        isConnected = false;\n        resolve(null);\n      };\n\n      channel.onerror = e => {\n        reject(e);\n      };\n    });\n  }\n\n  socket_setup() {\n    socket = this.setup_websocket().then(channel => {\n      socket = channel;\n      window.alert('open channel !');\n    }).catch(error => {\n      window.alert('failed to setup !');\n    });\n  }\n\n  websocket_clickhandler() {\n    if (!isConnected) {\n      this.setup_websocket().then(channel => {\n        socket = channel;\n        window.alert('open channel !');\n      }).catch(error => {\n        window.alert('failed to setup !');\n      });\n    } else {\n      this.close_websocket(socket).then(channel => {\n        socket = channel;\n        window.alert('close channel !');\n      }).catch(error => {\n        window.alert('failed to close !');\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.websocket_clickhandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Pause/Start\"), /*#__PURE__*/React.createElement(ScrollableTabsButtonAuto, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Widget;","map":{"version":3,"sources":["/Users/bb/Dev/visual_stock_v2/react_app/src/Components/Tab.js"],"names":["React","Button","ScrollableTabsButtonAuto","url","isConnected","socket","Widget","Component","constructor","props","state","data_list","setup_websocket","Promise","resolve","reject","channel","WebSocket","onopen","onmessage","e","console","log","data","setState","onerror","close_websocket","close","onclose","socket_setup","then","window","alert","catch","error","websocket_clickhandler","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { ScrollableTabsButtonAuto } from './Tab'\n\n\n\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr'\nlet isConnected = false\nlet socket = null\n\nclass Widget extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data_list: null\n    }\n  }\n\n  setup_websocket() {\n    return new Promise((resolve, reject) => {\n      let channel = new WebSocket(url)\n      channel.onopen = () => {\n        isConnected = true\n        resolve(channel)\n      }\n      channel.onmessage = (e) => {\n        console.log(e.data)\n        this.setState({\n          data_list: e.data\n        })\n      }\n      channel.onerror = (e) => {\n        reject(e)\n      }\n    })\n  }\n\n  close_websocket(channel) {\n    return new Promise((resolve, reject) => {\n      channel.close()\n      channel.onclose = () => {\n        isConnected = false\n        resolve(null)\n      }\n      channel.onerror = (e) => {\n        reject(e)\n      }\n    })\n  }\n\n  socket_setup() {\n    socket = this.setup_websocket().then(channel => {\n      socket = channel\n      window.alert('open channel !')\n    }).catch(error => {\n      window.alert('failed to setup !')\n    })\n  }\n\n  websocket_clickhandler() {\n    if (!isConnected) {   \n      this.setup_websocket().then(channel => {\n        socket = channel\n        window.alert('open channel !')\n      }).catch(error => {\n        window.alert('failed to setup !')\n      })\n    }\n    else {\n      this.close_websocket(socket).then(channel => {\n        socket = channel\n        window.alert('close channel !')\n      }).catch(error => {\n        window.alert('failed to close !')\n      })\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.websocket_clickhandler()}>\n          Pause/Start\n        </Button>\n        <ScrollableTabsButtonAuto />\n      </div>\n    )\n  }\n}\n\nexport default Widget;\n"]},"metadata":{},"sourceType":"module"}