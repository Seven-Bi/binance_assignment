{"ast":null,"code":"var _jsxFileName = \"/Users/bbe/Dev/Module/binance_assignment/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\nconst root_base = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst base = {\n  padding: '1vh',\n  width: '40%',\n  height: '80vh',\n  backgroundColor: 'red'\n};\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\nlet channel = null;\nlet isConnected = false;\n\nlet load_websocket = (channel, isConnected) => {\n  if (isConnected === false) {\n    window.alert('start');\n    return new Promise((resolve, reject) => {\n      channel = new WebSocket(url); // channel.onclose = function(event) {\n      // \tisConnected = false\n      // }\n      // channel.onopen = function(event) {\n      // \tisConnected = true\n      // }\n\n      channel.onmessage = function (event) {\n        console.log(event.data);\n      };\n    }).then(() => {\n      if (WebSocket.readyState !== WebSocket.OPEN) {\n        return false;\n      } else {\n        isConnected = true;\n        return true;\n      }\n    });\n  } else {\n    window.alert('close');\n    return new Promise((resolve, reject) => {\n      channel.close();\n    }).then(() => {\n      if (WebSocket.readyState !== WebSocket.CLOSED) {\n        return false;\n      } else {\n        isConnected = false;\n        return true;\n      }\n    });\n  }\n};\n\nconst websocket_clickhandler = () => {\n  let result = load_websocket(channel, isConnected);\n\n  if (result) {\n    window.alert('done!');\n  } else {\n    window.alert('error!');\n  }\n};\n\nclass Base extends React.Component {\n  // componentDidMount() {\n  // \tchannel.onmessage = e => {\n  // \t\tconsole.log(e.data)\n  // \t}\n  // \tchannel.onerror = error => {\n  // \t\tconsole.log(`WebSocket error: ${error}`)\n  // \t}\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: root_base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MarketWidget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: websocket_clickhandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Base, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bbe/Dev/Module/binance_assignment/src/index.js"],"names":["React","ReactDOM","MarketWidget","root_base","display","justifyContent","base","padding","width","height","backgroundColor","url","channel","isConnected","load_websocket","window","alert","Promise","resolve","reject","WebSocket","onmessage","event","console","log","data","then","readyState","OPEN","close","CLOSED","websocket_clickhandler","result","Base","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\n\n\n\n\nconst root_base = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n};\n\nconst base = {\n\tpadding: '1vh',\n\twidth: '40%',\n\theight: '80vh',\n\tbackgroundColor: 'red',\n};\n\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr'\nlet channel = null\nlet isConnected = false\n\n\nlet load_websocket = (channel, isConnected) => {\n\tif (isConnected === false) {\n\t\twindow.alert('start')\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tchannel = new WebSocket(url)\n\t\t\t\n\t\t\t// channel.onclose = function(event) {\n\t\t\t// \tisConnected = false\n\t\t\t// }\n\t\t\t// channel.onopen = function(event) {\n\t\t\t// \tisConnected = true\n\t\t\t// }\n\t\t\tchannel.onmessage = function(event) {\n\t\t\t\tconsole.log(event.data)\n\t\t\t}\n\t\t}).then(() => {\n\t\t\tif (WebSocket.readyState !== WebSocket.OPEN) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tisConnected = true\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t}\n\telse {\n\t\twindow.alert('close')\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tchannel.close()\n\t\t}).then(() => {\n\t\t\tif (WebSocket.readyState !== WebSocket.CLOSED) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tisConnected = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t}\n}\n\n\nconst websocket_clickhandler = () => {\n\tlet result = load_websocket(channel, isConnected)\n\tif (result) {\n\t\twindow.alert('done!')\n\t}\n\telse {\n\t\twindow.alert('error!')\n\t}\n}\n\n\nclass Base extends React.Component {\n\n\t// componentDidMount() {\n\t// \tchannel.onmessage = e => {\n\t// \t\tconsole.log(e.data)\n\t// \t}\n\t// \tchannel.onerror = error => {\n\t// \t\tconsole.log(`WebSocket error: ${error}`)\n\t// \t}\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<div style = { root_base }>\n\t\t\t\t<div style = { base }>\n\t\t\t\t\t<MarketWidget />\n\t\t\t\t</div>\n\t\t\t\t<button onClick={websocket_clickhandler}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n\t<Base />,\n\tdocument.getElementById('root'),\t\n);"]},"metadata":{},"sourceType":"module"}