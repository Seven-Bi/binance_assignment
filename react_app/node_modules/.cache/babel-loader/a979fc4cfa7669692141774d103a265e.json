{"ast":null,"code":"var _jsxFileName = \"/Users/bbe/Dev/Module/binance_assignment/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\nimport MyProvider from './my_provider.js';\nconst root_base = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst base = {\n  padding: '1vh',\n  width: '40%',\n  height: '80vh',\n  backgroundColor: 'red'\n};\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\nlet isConnected = false;\nlet socket = null;\n\nlet calculate_change = (basedata, data) => {};\n\nlet setup_websocket = () => {\n  return new Promise((resolve, reject) => {\n    let channel = new WebSocket(url);\n\n    channel.onopen = () => {\n      isConnected = true;\n      resolve(channel);\n    };\n\n    channel.onmessage = e => {\n      console.log(e.data);\n    };\n\n    channel.onerror = e => {\n      reject(e);\n    };\n  });\n};\n\nlet close_websocket = channel => {\n  return new Promise((resolve, reject) => {\n    channel.close();\n\n    channel.onclose = () => {\n      isConnected = false;\n      resolve(null);\n    };\n\n    channel.onerror = e => {\n      reject(e);\n    };\n  });\n};\n\nlet websocket_clickhandler = () => {\n  if (!isConnected) {\n    setup_websocket().then(channel => {\n      socket = channel;\n      window.alert('open channel !');\n    }).catch(error => {\n      window.alert('failed to setup !');\n    });\n  } else {\n    close_websocket(socket).then(channel => {\n      socket = channel;\n      window.alert('close channel !');\n    }).catch(error => {\n      window.alert('failed to close !');\n    });\n  }\n};\n\nclass Base extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      api_data: [],\n      loaded: false\n    };\n  }\n\n  handleClick(data) {\n    this.setState({\n      api_data: data,\n      loaded: true\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.loaded) {\n      socket = setup_websocket().then(channel => {\n        socket = channel;\n        window.alert('open channel !');\n      }).catch(error => {\n        window.alert('failed to setup !');\n      });\n\n      socket.onclose = () => {\n        setTimeout(() => {\n          socket = setup_websocket().then(channel => {\n            socket = channel;\n            window.alert('open channel !');\n          }).catch(error => {\n            window.alert('failed to setup !');\n          });\n        }, 4000);\n      };\n\n      socket.onmessage = e => {\n        console.log(e.data);\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MyProvider, {\n      callback: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: root_base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(MarketWidget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: websocket_clickhandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Base, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bbe/Dev/Module/binance_assignment/src/index.js"],"names":["React","ReactDOM","MarketWidget","MyProvider","root_base","display","justifyContent","base","padding","width","height","backgroundColor","url","isConnected","socket","calculate_change","basedata","data","setup_websocket","Promise","resolve","reject","channel","WebSocket","onopen","onmessage","e","console","log","onerror","close_websocket","close","onclose","websocket_clickhandler","then","window","alert","catch","error","Base","Component","constructor","props","state","api_data","loaded","handleClick","setState","componentDidUpdate","setTimeout","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\nimport MyProvider from './my_provider.js'\n\n\n\nconst root_base = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n};\n\nconst base = {\n\tpadding: '1vh',\n\twidth: '40%',\n\theight: '80vh',\n\tbackgroundColor: 'red',\n};\n\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr'\nlet isConnected = false\nlet socket = null\n\n\nlet calculate_change = (basedata, data) => {\n\n}\n\nlet setup_websocket = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tlet channel = new WebSocket(url)\n\t\tchannel.onopen = () => {\n\t\t\tisConnected = true\n\t\t\tresolve(channel)\n\t\t}\n\t\tchannel.onmessage = (e) => {\n\t\t\tconsole.log(e.data)\n\t\t}\n\t\tchannel.onerror = (e) => {\n\t\t\treject(e)\n\t\t}\n\t})\n}\n\nlet close_websocket = (channel) => {\n\treturn new Promise((resolve, reject) => {\n\t\tchannel.close()\n\t\tchannel.onclose = () => {\n\t\t\tisConnected = false\n\t\t\tresolve(null)\n\t\t}\n\t\tchannel.onerror = (e) => {\n\t\t\treject(e)\n\t\t}\n\t})\n}\n\nlet websocket_clickhandler = () => {\n\tif (!isConnected) {\t\t\n\t\tsetup_websocket().then(channel => {\n\t\t\tsocket = channel\n\t\t\twindow.alert('open channel !')\n\t\t}).catch(error => {\n\t\t\twindow.alert('failed to setup !')\n\t\t})\n\t}\n\telse {\n\t\tclose_websocket(socket).then(channel => {\n\t\t\tsocket = channel\n\t\t\twindow.alert('close channel !')\n\t\t}).catch(error => {\n\t\t\twindow.alert('failed to close !')\n\t\t})\n\t}\n}\n\nclass Base extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tapi_data: [],\n\t\t\tloaded: false\n\t\t}\n\t}\n\n\thandleClick(data) {\n\t\tthis.setState({api_data: data, loaded: true});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.loaded) {\n\t\t\tsocket = setup_websocket().then(channel => {\n\t\t\t\tsocket = channel\n\t\t\t\twindow.alert('open channel !')\n\t\t\t}).catch(error => {\n\t\t\t\twindow.alert('failed to setup !')\n\t\t\t})\n\n\n\t\t\tsocket.onclose = () => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsocket = setup_websocket().then(channel => {\n\t\t\t\t\t\tsocket = channel\n\t\t\t\t\t\twindow.alert('open channel !')\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\twindow.alert('failed to setup !')\n\t\t\t\t\t})\n\t\t\t\t}, 4000);\n\t\t\t}\n\n\t\t\tsocket.onmessage = (e) => {\n\t\t\t\tconsole.log(e.data)\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<MyProvider callback = {this.handleClick}>\n\t\t\t\t<div style = { root_base }>\n\t\t\t\t\t<div style = { base }>\n\t\t\t\t\t\t<MarketWidget />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button onClick={websocket_clickhandler}/>\n\t\t\t\t</div>\n\t\t\t</MyProvider>\n\t\t);\n\t}\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n\t<Base />,\n\tdocument.getElementById('root'),\t\n);"]},"metadata":{},"sourceType":"module"}