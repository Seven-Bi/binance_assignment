{"ast":null,"code":"var _jsxFileName = \"/Users/bbe/Dev/Module/visual_stock_v2/react_app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyContext from './my_context.js';\nimport MarketWidget from './widget.js';\nconst root = {\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst api = '/get-products';\n\nlet calculate = (update_data, api_dict) => {\n  var list = JSON.parse(update_data);\n  const listItems = list.data.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, item.s, \" ==> \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Change: \", Math.abs(item.c - api_dict[item.s]) / api_dict[item.s])));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, \" \", listItems, \" \");\n};\n\nlet tree_build = api_data_list => {\n  var tree = {};\n};\n\nlet sort = list => {\n  var temp_dict = {};\n  list.forEach(i => {\n    temp_dict[i.s] = i.o;\n  });\n  return temp_dict;\n};\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      market_data: null,\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(api).then(res => {\n      return res.json();\n    }).then(output => {\n      var api_data = sort(output.data);\n      this.setState({\n        market_data: api_data,\n        loaded: true\n      }); //this.myRef.current.socket_setup()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }\n    }, \"LOL\"); //     if (this.state.loaded) {\n    //         return (\n    //             <MyContext.Provider\n    //                 value = {{\n    //                     data: this.state.market_data,\n    //                     change: calculate\n    //                 }}\n    //             >\n    // \t<div style = { root }>\n    // \t\t<MarketWidget ref={this.myRef} />\n    // \t</div>\n    //             </MyContext.Provider>\n    //         );\n    //     }\n    //     else {\n    //         return (\n    // <div style = { root }>\n    // \t<h1> Loading ... </h1>\n    // </div>\n    //         );\n    //     }\t\t\t\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Index, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bbe/Dev/Module/visual_stock_v2/react_app/src/index.js"],"names":["React","ReactDOM","MyContext","MarketWidget","root","display","flexDirection","api","calculate","update_data","api_dict","list","JSON","parse","listItems","data","map","item","s","Math","abs","c","tree_build","api_data_list","tree","sort","temp_dict","forEach","i","o","Index","Component","constructor","props","myRef","createRef","state","market_data","loaded","componentDidMount","fetch","then","res","json","output","api_data","setState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,aAAzB;AAKA,MAAMC,IAAI,GAAG;AACZC,EAAAA,OAAO,EAAE,MADG;AAEZC,EAAAA,aAAa,EAAE;AAFH,CAAb;AAKA,MAAMC,GAAG,GAAG,eAAZ;;AAEA,IAAIC,SAAS,GAAG,CAACC,WAAD,EAAcC,QAAd,KAA2B;AAC1C,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAX;AACG,QAAMK,SAAS,GAAGH,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAeC,IAAD,iBAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACC,CAAZ,UADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeC,IAAI,CAACC,GAAL,CAASH,IAAI,CAACI,CAAL,GAASX,QAAQ,CAACO,IAAI,CAACC,CAAN,CAA1B,IAAoCR,QAAQ,CAACO,IAAI,CAACC,CAAN,CAA3D,CAFJ,CADc,CAAlB;AAOH,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOJ,SAAP,MADD;AAGA,CAZD;;AAeA,IAAIQ,UAAU,GAAIC,aAAD,IAAmB;AAChC,MAAIC,IAAI,GAAG,EAAX;AAIH,CALD;;AAOA,IAAIC,IAAI,GAAId,IAAD,IAAU;AACpB,MAAIe,SAAS,GAAG,EAAhB;AAEAf,EAAAA,IAAI,CAACgB,OAAL,CACCC,CAAC,IAAI;AACJF,IAAAA,SAAS,CAACE,CAAC,CAACV,CAAH,CAAT,GAAiBU,CAAC,CAACC,CAAnB;AACA,GAHF;AAKA,SAAOH,SAAP;AACA,CATD;;AAWA,MAAMI,KAAN,SAAoB9B,KAAK,CAAC+B,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAalC,KAAK,CAACmC,SAAN,EAAb;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAACjC,GAAD,CAAL,CACCkC,IADD,CAEIC,GAAG,IAAI;AACH,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAJL,EAMCF,IAND,CAMOG,MAAD,IAAY;AACd,UAAIC,QAAQ,GAAGpB,IAAI,CAACmB,MAAM,CAAC7B,IAAR,CAAnB;AACA,WAAK+B,QAAL,CAAc;AACVT,QAAAA,WAAW,EAAEQ,QADH;AAEVP,QAAAA,MAAM,EAAE;AAFE,OAAd,EAFc,CAMd;AACH,KAbD;AAcH;;AAEJS,EAAAA,MAAM,GAAG;AACF,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP,CADE,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAlDkC,C,CAsDpC;;;AAGA9C,QAAQ,CAAC8C,MAAT,eACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyContext from './my_context.js';\nimport MarketWidget from './widget.js';\n\n\n\n\nconst root = {\n\tdisplay: 'flex',\n\tflexDirection: 'column'\n}\n\nconst api = '/get-products'\n\nlet calculate = (update_data, api_dict) => {\n\tvar list = JSON.parse(update_data)\n    const listItems = list.data.map((item) => \n        <li>\n            <span>{item.s} ==> </span>\n            <span>Change: {Math.abs(item.c - api_dict[item.s])/api_dict[item.s]}</span>\n        </li>      \n    )\n\n\treturn (\n\t\t<ul> { listItems } </ul>\n\t)\n}\n\n\nlet tree_build = (api_data_list) => {\n    var tree = {}\n\n    \n    \n}\n\nlet sort = (list) => {\n\tvar temp_dict = {}\n\n\tlist.forEach(\n\t\ti => {\n\t\t\ttemp_dict[i.s] = i.o\n\t\t}\n\t)\n\treturn temp_dict\n}\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef();\n        this.state = {\n            market_data: null,\n            loaded: false\n        }\n    }\n\n    componentDidMount() {\n        fetch(api)\n        .then(\n            res => {\n                return res.json()\n            }\n        )\n        .then((output) => {\n            var api_data = sort(output.data)\n            this.setState({\n                market_data: api_data,\n                loaded: true\n            })\n            //this.myRef.current.socket_setup()\n        })\n    }\n\n\trender() {\n        return(<div>LOL</div>)\n    //     if (this.state.loaded) {\n    //         return (\n    //             <MyContext.Provider\n    //                 value = {{\n    //                     data: this.state.market_data,\n    //                     change: calculate\n    //                 }}\n    //             >\n\t\t\t\t// \t<div style = { root }>\n\t\t\t\t// \t\t<MarketWidget ref={this.myRef} />\n\t\t\t\t// \t</div>\n    //             </MyContext.Provider>\n    //         );\n    //     }\n    //     else {\n    //         return (\n\t\t\t\t// <div style = { root }>\n\t\t\t\t// \t<h1> Loading ... </h1>\n\t\t\t\t// </div>\n    //         );\n    //     }\t\t\t\n\t}\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n\t<Index />,\n\tdocument.getElementById('root'),\t\n);"]},"metadata":{},"sourceType":"module"}