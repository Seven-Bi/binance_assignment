{"ast":null,"code":"var _jsxFileName = \"/Users/bb/Dev/visual_stock_v2/react_app/src/Components/Widget.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport ScrollableTabsButtonAuto from './Tab.js';\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\nlet isConnected = false;\nlet socket = null;\nconst base = {\n  display: 'flex',\n  flexDirection: 'column'\n};\n\nclass Widget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_list: props.tab_data\n    };\n  }\n\n  setup_websocket() {\n    return new Promise((resolve, reject) => {\n      let channel = new WebSocket(url);\n\n      channel.onopen = () => {\n        isConnected = true;\n        resolve(channel);\n      };\n\n      channel.onmessage = e => {\n        if (this.state.data_list) {\n          let tabData = this.state.data_list;\n\n          for (let [key, value] of Object.entries(tabData)) {\n            console.log(key, value);\n          } // this.setState({\n          // \tdata_list: e.data\n          // })\n\n        }\n      };\n\n      channel.onerror = e => {\n        reject(e);\n      };\n    });\n  }\n\n  close_websocket(channel) {\n    return new Promise((resolve, reject) => {\n      channel.close();\n\n      channel.onclose = () => {\n        isConnected = false;\n        resolve(null);\n      };\n\n      channel.onerror = e => {\n        reject(e);\n      };\n    });\n  }\n\n  socket_setup() {\n    socket = this.setup_websocket().then(channel => {\n      socket = channel;\n      window.alert('open channel !');\n    }).catch(error => {\n      window.alert('failed to setup !');\n    });\n  }\n\n  websocket_clickhandler() {\n    if (!isConnected) {\n      this.setup_websocket().then(channel => {\n        socket = channel;\n        window.alert('open channel !');\n      }).catch(error => {\n        window.alert('failed to setup !');\n      });\n    } else {\n      this.close_websocket(socket).then(channel => {\n        socket = channel;\n        window.alert('close channel !');\n      }).catch(error => {\n        window.alert('failed to close !');\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.websocket_clickhandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, \"Pause/Start\"), /*#__PURE__*/React.createElement(ScrollableTabsButtonAuto, {\n      data: this.state.data_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Widget;","map":{"version":3,"sources":["/Users/bb/Dev/visual_stock_v2/react_app/src/Components/Widget.js"],"names":["React","Button","ScrollableTabsButtonAuto","url","isConnected","socket","base","display","flexDirection","Widget","Component","constructor","props","state","data_list","tab_data","setup_websocket","Promise","resolve","reject","channel","WebSocket","onopen","onmessage","e","tabData","key","value","Object","entries","console","log","onerror","close_websocket","close","onclose","socket_setup","then","window","alert","catch","error","websocket_clickhandler","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,wBAAP,MAAqC,UAArC;AAIA,MAAMC,GAAG,GAAG,yDAAZ;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA,MAAMC,IAAI,GAAG;AACZC,EAAAA,OAAO,EAAE,MADG;AAEZC,EAAAA,aAAa,EAAE;AAFH,CAAb;;AAKA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAEF,KAAK,CAACG;AADL,KAAb;AAGA;;AAEDC,EAAAA,eAAe,GAAG;AACjB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAIC,OAAO,GAAG,IAAIC,SAAJ,CAAclB,GAAd,CAAd;;AACAiB,MAAAA,OAAO,CAACE,MAAR,GAAiB,MAAM;AACtBlB,QAAAA,WAAW,GAAG,IAAd;AACAc,QAAAA,OAAO,CAACE,OAAD,CAAP;AACA,OAHD;;AAIAA,MAAAA,OAAO,CAACG,SAAR,GAAqBC,CAAD,IAAO;AAG1B,YAAG,KAAKX,KAAL,CAAWC,SAAd,EAAyB;AACxB,cAAIW,OAAO,GAAG,KAAKZ,KAAL,CAAWC,SAAzB;;AACA,eAAI,IAAI,CAACY,GAAD,EAAMC,KAAN,CAAR,IAAwBC,MAAM,CAACC,OAAP,CAAeJ,OAAf,CAAxB,EAAiD;AAChDK,YAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAAiBC,KAAjB;AACA,WAJuB,CAMxB;AACA;AACA;;AACA;AACD,OAbD;;AAcAP,MAAAA,OAAO,CAACY,OAAR,GAAmBR,CAAD,IAAO;AACxBL,QAAAA,MAAM,CAACK,CAAD,CAAN;AACA,OAFD;AAGA,KAvBM,CAAP;AAwBA;;AAEDS,EAAAA,eAAe,CAACb,OAAD,EAAU;AACxB,WAAO,IAAIH,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCC,MAAAA,OAAO,CAACc,KAAR;;AACAd,MAAAA,OAAO,CAACe,OAAR,GAAkB,MAAM;AACvB/B,QAAAA,WAAW,GAAG,KAAd;AACAc,QAAAA,OAAO,CAAC,IAAD,CAAP;AACA,OAHD;;AAIAE,MAAAA,OAAO,CAACY,OAAR,GAAmBR,CAAD,IAAO;AACxBL,QAAAA,MAAM,CAACK,CAAD,CAAN;AACA,OAFD;AAGA,KATM,CAAP;AAUA;;AAEDY,EAAAA,YAAY,GAAG;AACd/B,IAAAA,MAAM,GAAG,KAAKW,eAAL,GAAuBqB,IAAvB,CAA4BjB,OAAO,IAAI;AAC/Cf,MAAAA,MAAM,GAAGe,OAAT;AACAkB,MAAAA,MAAM,CAACC,KAAP,CAAa,gBAAb;AACA,KAHQ,EAGNC,KAHM,CAGAC,KAAK,IAAI;AACjBH,MAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACA,KALQ,CAAT;AAMA;;AAEDG,EAAAA,sBAAsB,GAAG;AACxB,QAAI,CAACtC,WAAL,EAAkB;AACjB,WAAKY,eAAL,GAAuBqB,IAAvB,CAA4BjB,OAAO,IAAI;AACtCf,QAAAA,MAAM,GAAGe,OAAT;AACAkB,QAAAA,MAAM,CAACC,KAAP,CAAa,gBAAb;AACA,OAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACjBH,QAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACA,OALD;AAMA,KAPD,MAQK;AACJ,WAAKN,eAAL,CAAqB5B,MAArB,EAA6BgC,IAA7B,CAAkCjB,OAAO,IAAI;AAC5Cf,QAAAA,MAAM,GAAGe,OAAT;AACAkB,QAAAA,MAAM,CAACC,KAAP,CAAa,iBAAb;AACA,OAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACjBH,QAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACA,OALD;AAMA;AACD;;AAEDI,EAAAA,MAAM,GAAG;AAER,wBACC;AAAK,MAAA,KAAK,EAAGrC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKoC,sBAAL,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAIC,oBAAC,wBAAD;AAA0B,MAAA,IAAI,EAAG,KAAK7B,KAAL,CAAWC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AAQA;;AAtFmC;;AAyFrC,eAAeL,MAAf","sourcesContent":["import React from 'react'\nimport { Button } from '@material-ui/core'\nimport ScrollableTabsButtonAuto from './Tab.js'\n\n\n\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr'\nlet isConnected = false\nlet socket = null\n\nconst base = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n}\n\nclass Widget extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdata_list: props.tab_data\n\t\t}\n\t}\n\n\tsetup_websocket() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet channel = new WebSocket(url)\n\t\t\tchannel.onopen = () => {\n\t\t\t\tisConnected = true\n\t\t\t\tresolve(channel)\n\t\t\t}\n\t\t\tchannel.onmessage = (e) => {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(this.state.data_list) {\n\t\t\t\t\tlet tabData = this.state.data_list\n\t\t\t\t\tfor(let [key, value] of Object.entries(tabData)) {\n\t\t\t\t\t\tconsole.log(key, value)\n\t\t\t\t\t}\n\n\t\t\t\t\t// this.setState({\n\t\t\t\t\t// \tdata_list: e.data\n\t\t\t\t\t// })\n\t\t\t\t}\n\t\t\t}\n\t\t\tchannel.onerror = (e) => {\n\t\t\t\treject(e)\n\t\t\t}\n\t\t})\n\t}\n\n\tclose_websocket(channel) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tchannel.close()\n\t\t\tchannel.onclose = () => {\n\t\t\t\tisConnected = false\n\t\t\t\tresolve(null)\n\t\t\t}\n\t\t\tchannel.onerror = (e) => {\n\t\t\t\treject(e)\n\t\t\t}\n\t\t})\n\t}\n\n\tsocket_setup() {\n\t\tsocket = this.setup_websocket().then(channel => {\n\t\t\tsocket = channel\n\t\t\twindow.alert('open channel !')\n\t\t}).catch(error => {\n\t\t\twindow.alert('failed to setup !')\n\t\t})\n\t}\n\n\twebsocket_clickhandler() {\n\t\tif (!isConnected) {\t\t\n\t\t\tthis.setup_websocket().then(channel => {\n\t\t\t\tsocket = channel\n\t\t\t\twindow.alert('open channel !')\n\t\t\t}).catch(error => {\n\t\t\t\twindow.alert('failed to setup !')\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.close_websocket(socket).then(channel => {\n\t\t\t\tsocket = channel\n\t\t\t\twindow.alert('close channel !')\n\t\t\t}).catch(error => {\n\t\t\t\twindow.alert('failed to close !')\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn(\n\t\t\t<div style={ base }>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => this.websocket_clickhandler()}>\n \t\t\t\t\tPause/Start\n\t\t\t\t</Button>\n\t\t\t\t<ScrollableTabsButtonAuto data={ this.state.data_list}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Widget;\n"]},"metadata":{},"sourceType":"module"}