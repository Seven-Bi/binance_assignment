{"ast":null,"code":"var _jsxFileName = \"/Users/bbe/Dev/Module/visual_stock_v2/react_app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyContext from './my_context.js';\nimport MarketWidget from './widget.js';\nconst root = {\n  display: 'flex',\n  flexDirection: 'column'\n};\nconst api = '/get-products';\n\nlet calculate = (update_data, api_dict) => {\n  var list = JSON.parse(update_data);\n  const listItems = list.data.forEach(item => {\n    var code_name = item.s;\n    console.log(code_name);\n    console.log(Math.abs(item.c - api_dict.code_name) / api_dict.code_name);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }\n    }, code_name), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    }, Math.abs(item.c - api_dict.code_name) / api_dict.code_name));\n  }); // const listItems = list.map((item) => {\n  // \tvar code_name = item.s\n  // \treturn(\n  // \t\t<li><span>{code_name}</span><span>{Math.abs(item.c - api_dict.code_name)/(api_dict.code_name)}</span></li>\n  // \t)\n  // })\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, \" \", listItems, \" \");\n};\n\nlet sort = list => {\n  var temp_dict = {};\n  list.forEach(i => {\n    temp_dict[i.s] = i.o;\n  });\n  return temp_dict;\n};\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      market_data: null,\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(api).then(res => {\n      return res.json();\n    }).then(output => {\n      var api_data = sort(output.data);\n      this.setState({\n        market_data: api_data,\n        loaded: true\n      });\n      this.myRef.current.socket_setup();\n    });\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return /*#__PURE__*/React.createElement(MyContext.Provider, {\n        value: {\n          data: this.state.market_data,\n          change: calculate\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(MarketWidget, {\n        ref: this.myRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }\n      }, \" Loading ... \"));\n    }\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Index, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bbe/Dev/Module/visual_stock_v2/react_app/src/index.js"],"names":["React","ReactDOM","MyContext","MarketWidget","root","display","flexDirection","api","calculate","update_data","api_dict","list","JSON","parse","listItems","data","forEach","item","code_name","s","console","log","Math","abs","c","sort","temp_dict","i","o","Index","Component","constructor","props","myRef","createRef","state","market_data","loaded","componentDidMount","fetch","then","res","json","output","api_data","setState","current","socket_setup","render","change","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyContext from './my_context.js';\nimport MarketWidget from './widget.js';\n\n\n\n\nconst root = {\n\tdisplay: 'flex',\n\tflexDirection: 'column'\n}\n\nconst api = '/get-products'\nlet calculate = (update_data, api_dict) => {\n\tvar list = JSON.parse(update_data)\n\tconst listItems = list.data.forEach(item => {\n\t\tvar code_name = item.s\n\n\t\tconsole.log(code_name)\n\t\tconsole.log(Math.abs(item.c - api_dict.code_name)/(api_dict.code_name))\n\t\treturn(\n\t\t\t<li><span>{code_name}</span><span>{Math.abs(item.c - api_dict.code_name)/(api_dict.code_name)}</span></li>\n\t\t)\n\t})\n\n\t// const listItems = list.map((item) => {\n\t// \tvar code_name = item.s\n\t// \treturn(\n\t// \t\t<li><span>{code_name}</span><span>{Math.abs(item.c - api_dict.code_name)/(api_dict.code_name)}</span></li>\n\t// \t)\n\t// })\n\n\treturn (\n\t\t<ul> { listItems } </ul>\n\t)\n}\n\nlet sort = (list) => {\n\tvar temp_dict = {}\n\n\tlist.forEach(\n\t\ti => {\n\t\t\ttemp_dict[i.s] = i.o\n\t\t}\n\t)\n\treturn temp_dict\n}\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef();\n        this.state = {\n            market_data: null,\n            loaded: false\n        }\n    }\n\n    componentDidMount() {\n        fetch(api)\n        .then(\n            res => {\n                return res.json()\n            }\n        )\n        .then((output) => {\n            var api_data = sort(output.data)\n            this.setState({\n                market_data: api_data,\n                loaded: true\n            })\n            this.myRef.current.socket_setup()\n        })\n    }\n\n\trender() {\n        if (this.state.loaded) {\n            return (\n                <MyContext.Provider\n                    value = {{\n                        data: this.state.market_data,\n                        change: calculate\n                    }}\n                >\n\t\t\t\t\t<div style = { root }>\n\t\t\t\t\t\t<MarketWidget ref={this.myRef} />\n\t\t\t\t\t</div>\n                </MyContext.Provider>\n            );\n        }\n        else {\n            return (\n\t\t\t\t<div style = { root }>\n\t\t\t\t\t<h1> Loading ... </h1>\n\t\t\t\t</div>\n            );\n        }\t\t\t\n\t}\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n\t<Index />,\n\tdocument.getElementById('root'),\t\n);"]},"metadata":{},"sourceType":"module"}