{"ast":null,"code":"var _jsxFileName = \"/Users/bbe/Dev/Module/binance_assignment/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\nconst root_base = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst base = {\n  padding: '1vh',\n  width: '40%',\n  height: '80vh',\n  backgroundColor: 'red'\n};\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\nconst channel = new WebSocket(url);\nlet isConnected = false;\n\nchannel.onclose = function (event) {\n  isConnected = false;\n};\n\nchannel.onopen = function (event) {\n  isConnected = true;\n};\n\nconst load_websocket = isConnected => {\n  if (!isConnected) {\n    return new Promise((resolve, reject) => {\n      channel.open();\n    }).then(() => {\n      if (WebSocket.readyState !== WebSocket.OPEN) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      channel.close();\n    }).then(() => {\n      if (WebSocket.readyState !== WebSocket.CLOSED) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n};\n\nconst websocket_clickhandler = () => {\n  let result = load_websocket(isConnected);\n\n  if (result) {\n    window.alert('done!');\n  } else {\n    window.alert('error!');\n  }\n};\n\nclass Base extends React.Component {\n  componentDidMount() {\n    channel.onmessage = e => {\n      console.log(e.data);\n    };\n\n    channel.onerror = error => {\n      console.log(`WebSocket error: ${error}`);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: root_base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MarketWidget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: websocket_clickhandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Base, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bbe/Dev/Module/binance_assignment/src/index.js"],"names":["React","ReactDOM","MarketWidget","root_base","display","justifyContent","base","padding","width","height","backgroundColor","url","channel","WebSocket","isConnected","onclose","event","onopen","load_websocket","Promise","resolve","reject","open","then","readyState","OPEN","close","CLOSED","websocket_clickhandler","result","window","alert","Base","Component","componentDidMount","onmessage","e","console","log","data","onerror","error","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\n\n\n\n\nconst root_base = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n};\n\nconst base = {\n\tpadding: '1vh',\n\twidth: '40%',\n\theight: '80vh',\n\tbackgroundColor: 'red',\n};\n\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr'\nconst channel = new WebSocket(url)\n\n\nlet isConnected = false\nchannel.onclose = function(event) {\n\tisConnected = false\n}\nchannel.onopen = function(event) {\n\tisConnected = true\n}\n\n\nconst load_websocket = (isConnected) => {\n\tif (!isConnected) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tchannel.open()\n\t\t}).then(() => {\n\t\t\tif (WebSocket.readyState !== WebSocket.OPEN) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t}\n\telse {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tchannel.close()\n\t\t}).then(() => {\n\t\t\tif (WebSocket.readyState !== WebSocket.CLOSED) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t}\n}\n\n\nconst websocket_clickhandler = () => {\n\tlet result = load_websocket(isConnected)\n\tif (result) {\n\t\twindow.alert('done!')\n\t}\n\telse {\n\t\twindow.alert('error!')\n\t}\n}\n\n\nclass Base extends React.Component {\n\n\tcomponentDidMount() {\n\t\tchannel.onmessage = e => {\n\t\t\tconsole.log(e.data)\n\t\t}\n\t\tchannel.onerror = error => {\n\t\t\tconsole.log(`WebSocket error: ${error}`)\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style = { root_base }>\n\t\t\t\t<div style = { base }>\n\t\t\t\t\t<MarketWidget />\n\t\t\t\t</div>\n\t\t\t\t<button onClick={websocket_clickhandler}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n\t<Base />,\n\tdocument.getElementById('root'),\t\n);"]},"metadata":{},"sourceType":"module"}