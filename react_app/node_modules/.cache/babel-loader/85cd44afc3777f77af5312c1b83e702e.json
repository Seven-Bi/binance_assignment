{"ast":null,"code":"var _jsxFileName = \"/Users/bbe/Dev/Module/binance_assignment/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\nimport MyProvider from './my_provider.js';\nimport PriceTrending from './market_data.js';\nconst root_base = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst base = {\n  padding: '1vh',\n  width: '40%',\n  height: '80vh',\n  backgroundColor: 'red'\n};\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr';\nlet isConnected = false;\nlet socket = null;\n\nlet calculate_change = (basedata, data) => {\n  var code = JSON.parse(data).data[0].s;\n  var l_price = JSON.parse(data).data[0].c;\n  basedata.forEach(i => {\n    if (i.s === code) {\n      //console.log((parseFloat(i.o) - parseFloat(l_price)) / parseFloat(i.o))\n      return (parseFloat(i.o) - parseFloat(l_price)) / parseFloat(i.o);\n    }\n  });\n};\n\nlet setup_websocket = (basedata, ref) => {\n  return new Promise((resolve, reject) => {\n    let channel = new WebSocket(url);\n\n    channel.onopen = () => {\n      isConnected = true;\n      resolve(channel);\n    };\n\n    channel.onmessage = e => {\n      ref.current.callback(calculate_change(basedata, e.data)); //xxxx\t\n    };\n\n    channel.onerror = e => {\n      reject(e);\n    };\n  });\n};\n\nlet close_websocket = channel => {\n  return new Promise((resolve, reject) => {\n    channel.close();\n\n    channel.onclose = () => {\n      isConnected = false;\n      resolve(null);\n    };\n\n    channel.onerror = e => {\n      reject(e);\n    };\n  });\n};\n\nlet websocket_clickhandler = (basedata, ref) => {\n  if (!isConnected) {\n    setup_websocket(basedata, ref).then(channel => {\n      socket = channel;\n      window.alert('open channel !');\n    }).catch(error => {\n      window.alert('failed to setup !');\n    });\n  } else {\n    close_websocket(socket).then(channel => {\n      socket = channel;\n      window.alert('close channel !');\n    }).catch(error => {\n      window.alert('failed to close !');\n    });\n  }\n}; // const ContextWrap = React.forwardRef((props, ref) => (\n// \t\t<div ref={ref} className=\"button\">\n// \t\t\t{props.children}\n// \t\t</div>\n// \t)\n// )\n\n\nclass Base extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      api_data: []\n    };\n  }\n\n  handleClick(data) {\n    this.setState({\n      api_data: data\n    });\n    socket = setup_websocket(data, () => {\n      this.ref;\n    }).then(channel => {\n      socket = channel;\n      window.alert('open channel !');\n    }).catch(error => {\n      window.alert('failed to setup !');\n    });\n\n    socket.onclose = () => {\n      setTimeout(() => {\n        socket = setup_websocket(data, () => {\n          this.ref;\n        }).then(channel => {\n          socket = channel;\n          window.alert('open channel !');\n        }).catch(error => {\n          window.alert('failed to setup !');\n        });\n      }, 4000);\n    };\n\n    socket.onmessage = e => {\n      this.ref.current.callback(calculate_change(data, e.data));\n    };\n  } //<MarketWidget ref={this.ref}/>\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(MyProvider, {\n      callback: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: root_base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: base,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(PriceTrending, {\n      ref: this.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => websocket_clickhandler(this.state.api_data, this.ref),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Base, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 2\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bbe/Dev/Module/binance_assignment/src/index.js"],"names":["React","ReactDOM","MarketWidget","MyProvider","PriceTrending","root_base","display","justifyContent","base","padding","width","height","backgroundColor","url","isConnected","socket","calculate_change","basedata","data","code","JSON","parse","s","l_price","c","forEach","i","parseFloat","o","setup_websocket","ref","Promise","resolve","reject","channel","WebSocket","onopen","onmessage","e","current","callback","onerror","close_websocket","close","onclose","websocket_clickhandler","then","window","alert","catch","error","Base","Component","constructor","props","createRef","state","api_data","handleClick","setState","setTimeout","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MarketWidget from './widget.js';\nimport MyProvider from './my_provider.js'\nimport PriceTrending from './market_data.js';\n\n\n\nconst root_base = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n};\n\nconst base = {\n\tpadding: '1vh',\n\twidth: '40%',\n\theight: '80vh',\n\tbackgroundColor: 'red',\n};\n\nconst url = 'wss://stream.binance.com/stream?streams=!miniTicker@arr'\nlet isConnected = false\nlet socket = null\n\n\nlet calculate_change = (basedata, data) => {\n\tvar code = JSON.parse(data).data[0].s\n\tvar l_price = JSON.parse(data).data[0].c\n\tbasedata.forEach (\n\t\ti => {\n\t\t\tif (i.s === code) {\n\t\t\t\t//console.log((parseFloat(i.o) - parseFloat(l_price)) / parseFloat(i.o))\n\t\t\t\treturn (parseFloat(i.o) - parseFloat(l_price)) / parseFloat(i.o)\n\t\t\t}\n\t\t}\n\t)\n}\n\nlet setup_websocket = (basedata, ref) => {\n\treturn new Promise((resolve, reject) => {\n\t\tlet channel = new WebSocket(url)\n\t\tchannel.onopen = () => {\n\t\t\tisConnected = true\n\t\t\tresolve(channel)\n\t\t}\n\t\tchannel.onmessage = (e) => {\n\t\t\tref.current.callback(calculate_change(basedata, e.data)) //xxxx\t\n\t\t}\n\t\tchannel.onerror = (e) => {\n\t\t\treject(e)\n\t\t}\n\t})\n}\n\nlet close_websocket = (channel) => {\n\treturn new Promise((resolve, reject) => {\n\t\tchannel.close()\n\t\tchannel.onclose = () => {\n\t\t\tisConnected = false\n\t\t\tresolve(null)\n\t\t}\n\t\tchannel.onerror = (e) => {\n\t\t\treject(e)\n\t\t}\n\t})\n}\n\nlet websocket_clickhandler = (basedata, ref) => {\n\tif (!isConnected) {\t\t\n\t\tsetup_websocket(basedata, ref).then(channel => {\n\t\t\tsocket = channel\n\t\t\twindow.alert('open channel !')\n\t\t}).catch(error => {\n\t\t\twindow.alert('failed to setup !')\n\t\t})\n\t}\n\telse {\n\t\tclose_websocket(socket).then(channel => {\n\t\t\tsocket = channel\n\t\t\twindow.alert('close channel !')\n\t\t}).catch(error => {\n\t\t\twindow.alert('failed to close !')\n\t\t})\n\t}\n}\n\n// const ContextWrap = React.forwardRef((props, ref) => (\n// \t\t<div ref={ref} className=\"button\">\n// \t\t\t{props.children}\n// \t\t</div>\n// \t)\n// )\n\nclass Base extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t\tthis.state = {\n\t\t\tapi_data: []\n\t\t}\n\t}\n\n\thandleClick(data) {\n\t\tthis.setState({api_data: data})\n\t\tsocket = setup_websocket(data, () => {this.ref}).then(channel => {\n\t\t\tsocket = channel\n\t\t\twindow.alert('open channel !')\n\t\t}).catch(error => {\n\t\t\twindow.alert('failed to setup !')\n\t\t})\n\n\t\tsocket.onclose = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsocket = setup_websocket(data, () => {this.ref}).then(channel => {\n\t\t\t\t\tsocket = channel\n\t\t\t\t\twindow.alert('open channel !')\n\t\t\t\t}).catch(error => {\n\t\t\t\t\twindow.alert('failed to setup !')\n\t\t\t\t})\n\t\t\t}, 4000);\n\t\t}\n\n\t\tsocket.onmessage = (e) => {\n\t\t\tthis.ref.current.callback(calculate_change(data, e.data))\n\t\t}\n\t}\n\t//<MarketWidget ref={this.ref}/>\n\trender() {\n\t\treturn (\n\t\t\t<MyProvider callback = {this.handleClick}>\n\t\t\t\t<div style = { root_base }>\n\t\t\t\t\t<div style = { base }>\n\t\t\t\t\t\t<PriceTrending ref={this.ref}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button onClick={() => websocket_clickhandler(this.state.api_data, this.ref)}/>\n\t\t\t\t</div>\n\t\t\t</MyProvider>\n\t\t);\n\t}\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n\t<Base />,\n\tdocument.getElementById('root'),\t\n);"]},"metadata":{},"sourceType":"module"}